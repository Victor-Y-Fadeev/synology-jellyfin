name: synology

services:
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - ./config/qbittorrent:/config
      - ./data:/data
    ports:
      - 8080:8080
    restart: unless-stopped
  # serveo:
  #   image: taichunmin/serveo:latest
  #   container_name: serveo
  #   tty: true
  #   stdin_open: true
  #   volumes:
  #     - .ssh:/root/.ssh
  #   command: >
  #     autossh -M 0
  #     -o ServerAliveInterval=60
  #     -o ServerAliveCountMax=3
  #     -o ExitOnForwardFailure=yes
  #     -o StrictHostKeyChecking=no
  #     -R plex.$SUBDOMAIN:80:plex:32400
  #     -R overseerr.$SUBDOMAIN:80:overseerr:5055
  #     -R qbittorrent.$SUBDOMAIN:80:qbittorrent:8080
  #     -R jackett.$SUBDOMAIN:80:jackett:9117
  #     -R radarr.$SUBDOMAIN:80:radarr:7878
  #     -R sonarr.$SUBDOMAIN:80:sonarr:8989
  #     $DOMAIN
  #   restart: unless-stopped

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   volumes:
  #     - ./default.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - 80:80
  #   restart: unless-stopped
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
    volumes:
      - ./config/plex:/config
      - ./data:/data
    ports:
      - 32400:32400
    restart: unless-stopped
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      # - PUID=${PUID}
      # - PGID=${PGID}
      - LOG_LEVEL=debug
      - TZ=${TZ}
    ports:
      - 5055:5055
    volumes:
      - ./config/jellyseerr:/app/config
    restart: unless-stopped
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
  # overseerr:
  #   image: lscr.io/linuxserver/overseerr:latest
  #   container_name: overseerr
  #   # dns:
  #   #   - 8.8.8.8
  #   #   - 8.8.4.4
  #   environment:
  #     # - HTTP_PROXY=host.docker.internal:2080
  #     # - HTTPS_PROXY=host.docker.internal:2080
  #     - HTTP_PROXY=http://host.docker.internal:2080
  #     - HTTPS_PROXY=http://host.docker.internal:2080
  #     # - HTTP_PROXY=http://gateway.docker.internal:2080
  #     # - HTTPS_PROXY=http://gateway.docker.internal:2080
  #     # - HTTP_PROXY=http://docker.for.win.localhost:2080
  #     # - HTTPS_PROXY=http://docker.for.win.localhost:2080
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ./config/overseerr:/config
  #   ports:
  #     - 5055:5055
  #   restart: unless-stopped
  #   networks:
  #     - proxy-network
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - AUTO_UPDATE=true
    volumes:
      - ./config/jackett:/config
      # - ./data/downloads:/data/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/radarr:/config
      - ./data:/data
    ports:
      - 7878:7878
    restart: unless-stopped
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/sonarr:/config
      - ./data:/data
    ports:
      - 8989:8989
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - HTTP_PROXY=http://host.docker.internal:2080
      - HTTPS_PROXY=http://host.docker.internal:2080
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/jellyfin:/config
      - ./data/tv:/data/tvshows
      - ./data/movies:/data/movies
    ports:
      - 8096:8096
      # - 8920:8920 #optional
      # - 7359:7359/udp #optional
      # - 1900:1900/udp #optional
    restart: unless-stopped

networks:
  proxy-network:
    driver: bridge
